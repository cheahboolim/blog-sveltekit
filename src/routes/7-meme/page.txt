<script lang="ts">
  import { onMount } from 'svelte';
  export let data: { coins?: any[] };

  // safe guard if data not present
  const coins = data?.coins ?? [];

  // votes (starts from server-provided votes)
  let votes: number[] = [];

  // voted record per session: symbol -> 1 | -1
  let voted: Record<string, number> = {};
  const STORAGE_KEY = '7meme:voted.v1';

  onMount(() => {
    // init votes from coins
    votes = coins.map(c => (typeof c.votes === 'number' ? c.votes : 0));

    // load session votes and apply them (so user sees their vote after same-session refresh)
    try {
      const raw = sessionStorage.getItem(STORAGE_KEY);
      voted = raw ? JSON.parse(raw) : {};
      coins.forEach((c, idx) => {
        const delta = voted[c.symbol];
        if (delta === 1) votes[idx] = votes[idx] + 1;
        else if (delta === -1) votes[idx] = votes[idx] - 1;
      });
    } catch (e) {
      voted = {};
    }
  });

  function hasVoted(symbol: string) {
    return !!voted[symbol];
  }

  function vote(index: number, type: 'up' | 'down') {
    const coin = coins[index];
    if (!coin) return;
    if (hasVoted(coin.symbol)) return; // one vote per session

    const delta = type === 'up' ? 1 : -1;
    votes[index] = (votes[index] ?? 0) + delta;
    voted[coin.symbol] = delta;
    try {
      sessionStorage.setItem(STORAGE_KEY, JSON.stringify(voted));
    } catch (e) {
      // ignore storage failures
    }
  }

  function potentialReturn(price: number, invest: number) {
    if (!price || price <= 0) return 0;
    const target = 0.01;
    const coinsOwned = invest / price;
    const value = coinsOwned * target;
    // sensible formatting: round to zero decimals for large numbers
    return value;
  }

  function fmt(n: number) {
    if (!isFinite(n)) return '‚Äî';
    if (n >= 1_000_000_000) return Math.floor(n).toLocaleString();
    if (n >= 1_000) return Math.floor(n).toLocaleString();
    return Number(n.toFixed(2)).toLocaleString();
  }
</script>

<svelte:head>
  <title>Top 7 Meme Coins ‚Äî 7-Meme</title>
  <meta name="description" content="Top 7 meme coins ‚Äî prices, potential returns, votes, and quick links to exchange." />
</svelte:head>

<main class="min-h-screen bg-black text-white py-10 px-4">
  <div class="max-w-6xl mx-auto">
    <header class="mb-8 text-center">
      <h1 class="text-3xl sm:text-4xl font-extrabold">üî• Top 7 Meme Coins</h1>
      <p class="text-sm text-slate-400 mt-2">Click Buy to go to <code>/exchange</code> (opens in new tab). Vote once per session.</p>
    </header>

    {#if coins.length === 0}
      <div class="text-center text-slate-400 py-20">No coins to show ‚Äî check your data source.</div>
    {:else}
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {#each coins as coin, i (coin.symbol)}
          <article class="bg-[#0b0f12] rounded-2xl p-5 shadow-lg hover:shadow-2xl transition-transform transform hover:-translate-y-1">
            <div class="flex items-center gap-4 mb-3">
              <img src={coin.image} alt={coin.name} class="w-14 h-14 rounded-lg object-cover" />
              <div class="flex-1">
                <div class="flex items-baseline justify-between gap-3">
                  <div>
                    <h2 class="text-lg font-semibold">{coin.rank}. {coin.name}</h2>
                    <div class="text-xs text-slate-400 uppercase">{coin.symbol}</div>
                  </div>
                  <div class="text-right">
                    <div class="text-green-400 font-mono font-semibold">${coin.price}</div>
                    {#if coin.potentialReturns}
                      <div class="text-xs text-slate-500 mt-1">est. @ $0.01</div>
                    {/if}
                  </div>
                </div>
              </div>
            </div>

            <p class="text-sm text-slate-300 mb-4 leading-relaxed">{coin.description}</p>

            <div class="bg-[#071018] p-3 rounded-lg mb-4">
              <div class="text-xs text-slate-400 mb-2">üìà If price reaches <strong>$0.01</strong>:</div>
              <div class="flex flex-wrap gap-3 text-sm">
                <div class="flex gap-2 items-baseline"><span class="text-slate-400">$1 ‚Üí</span><span class="text-green-400 font-bold">${fmt(potentialReturn(coin.price, 1))}</span></div>
                <div class="flex gap-2 items-baseline"><span class="text-slate-400">$100 ‚Üí</span><span class="text-green-400 font-bold">${fmt(potentialReturn(coin.price, 100))}</span></div>
                <div class="flex gap-2 items-baseline"><span class="text-slate-400">$10K ‚Üí</span><span class="text-green-400 font-bold">${fmt(potentialReturn(coin.price, 10000))}</span></div>
              </div>
            </div>

            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center gap-2">
                <button
                  class="px-3 py-1 rounded-md text-sm bg-green-600 hover:bg-green-500 disabled:opacity-60"
                  on:click={() => vote(i, 'up')}
                  disabled={hasVoted(coin.symbol)}
                  aria-pressed={hasVoted(coin.symbol)}
                >‚ñ≤</button>

                <button
                  class="px-3 py-1 rounded-md text-sm bg-rose-600 hover:bg-rose-500 disabled:opacity-60"
                  on:click={() => vote(i, 'down')}
                  disabled={hasVoted(coin.symbol)}
                  aria-pressed={hasVoted(coin.symbol)}
                >‚ñº</button>
              </div>

              <div class="text-sm text-slate-300">
                <span class="text-yellow-400 font-semibold">{votes[i]?.toLocaleString() ?? '0'}</span>
                <span class="text-slate-400 ml-2">votes</span>
              </div>
            </div>

            <div class="flex flex-col gap-2">
              <a href="/exchange" target="_blank" rel="noopener noreferrer" class="block text-center py-2 rounded-lg bg-blue-600 hover:bg-blue-500 font-semibold">
                üîç Check Live Price
              </a>
              <a href="/exchange" target="_blank" rel="noopener noreferrer" class="block text-center py-2 rounded-lg bg-emerald-500 hover:bg-emerald-400 font-semibold">
                üõí Buy {coin.name}
              </a>
              <div class="text-[11px] text-slate-500 text-center mt-1">*0% commission*</div>
            </div>
          </article>
        {/each}
      </div>
    {/if}
  </div>
</main>

<style>
  /* small visual polish */
  main { font-family: Inter, ui-sans-serif, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial; }
</style>
